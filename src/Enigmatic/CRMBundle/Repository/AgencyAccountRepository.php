<?php

namespace Enigmatic\CRMBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Enigmatic\CRMBundle\Entity\Account;
use Enigmatic\CRMBundle\Entity\Agency;

/**
 * AgencyAccountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AgencyAccountRepository extends EntityRepository
{
    public function find($id) {

        $qb = $this->createQueryBuilder('agency_account');
        $qb = $this->join($qb, true);
        $qb ->where('agency_account = :id')
            ->setParameter('id', $id);

//        $qb = $this->turnoverDate($qb);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function findOneByAccountAndAgency(Account $account, Agency $agency = null) {

        $qb = $this->createQueryBuilder('agency_account');
        $qb ->where('agency_account.account = :account')
            ->setParameter('account', $account);

        if ($agency) {
            $qb ->andWhere('agency_account.agency = :agency')
                ->setParameter('agency', $agency);
        }

//        $qb = $this->turnoverDate($qb);

        $qb->setMaxResults(1);

        return $qb->getQuery()->getOneOrNullResult();
    }

    protected function join(QueryBuilder $qb, $add = false)
    {
        $qb->leftjoin('agency_account.turnovers', 'turnovers');
        if ($add) {
            $qb->addSelect('turnovers');
        }

        return $qb;
    }

    protected function turnoverDate(QueryBuilder $qb)
    {
        $qb ->andWhere('turnovers.year >= :year_n_1');
        $qb ->setParameter('year_n_1', date('Y')-1);

        return $qb;
    }
}
